[{"categories":["R"],"content":"\r\rIDE setting for Data Science\r\r데이터 사이언스쪽으로 공부하고 싶어서 노트북을 새로 구매헀다. 무려 8년만에. 코드를 작성한다면 애플을 샀어야 했는데, 경제적 여건 상 국내 중소기업인 한성컴퓨터 제품을 구매헀다. 매우 쓰레기 였다.\n구매하고 한달도 안되어서 사용중 셧다운 또는 자동 절전모드로 전환되는 현상이 나타났다. 서비스 센터에 입고를 했더니, 증상이 안나온다고 다시 보냈다. 직접 증상이 나오는 것을 촬영하고 보냈더니 포맷한번 하고 보냈다. 내가 보내기 전에 포맷은 수도 없이 많이 했는데. 결국 3번 보내고 나서 SSD교체를 해주었다. 문제는 터치패드 근처에 아이패드를 가져다 되면 노트북이 꺼질 수 있다는 것이다. 신재품에서도 동일하게 나타나므로 주의를 요구한다고 말했다. 내가 컴퓨터 하루이틀 만진것도 아니고, 데스크탑은 직접 부품을 사서 다 조립도 할 수 있는데 고작 그 약한 자성떄문에 꺼지는게 당연하다고… 한성은 쓰레기다. 돈 벌면 바로 애플 살것이다.\n여튼 그래서 포맷을 수도없이 많이 했다. 즉 R과 Rstudio 등등 수도없이 반복해서 설치해보면서 나에게 익숙한 개발환경이 무엇인지 찾았다. 이제 본론으로 가자.\n초기 설정\rR 설치\r먼저 R을 설치한다. 설치시 유의할 점은 아래와 같다.\n\r64-bit만 설치\n\r설치 경로는 모두 영어로, 폴더명에 띄어쓰기는 지양하자\n\r한국어 보다는 영어를 기본언어로 설정하자\r\r\rR studio 설치\r이제 IDE인 R studio를 설치하면 된다. R studio를 설치하고 설정할 환경이 많다. (사실 이부분을 정리하고자 쓴거다.)\nTools - Global Options\n\rGeneral-Basic : Default working directory 변경\n\rGeneral-Basic : Workspace에서 .RData 사용하지 않음(never) 설정 및 시작시 자동 불러오기 미사용\n\rCode-Saving : encoding을 UTF-8로 변경\n\rAppearance : 테마 변경, 눈이 안좋으므로 zoom 125%에 Tommorrow Night Bright를 선호\n\rTerminal : Bash(Windows Subsystem for Linux), 참고로 우분트 등 설치후 가능\n\r\r기타\n\r마크다운 : Preview in Viewr Pane 체크\n\r마크다운 : Chunk Ouptput in Console 체크\n\r\r\r\r추가 설치 : Git bash 및 우분투 등\r참고로 윈도우10 기준 개발환경이다. 에플을 사야하는 이유가 이것이다. 지금부터는 에플이라면 필요없는 설치이기 때문이다.\n\rwindows 기능 켜기/끄기에서 Linux용 Windows 하위 시스템 체크\n\r우분투 설치\n\r파일 관리를 위한 git bash(https://git-scm.com/) 설치\n\rpdf 마트다운을 위한 TeX 설치\n\r\r\r\r초기 설정 확인\r이렇게 설치를 완료했다면 설치 및 설정이 잘되었는지 확인해 보자.\nsessionInfo()\r## R version 4.0.0 (2020-04-24)\r## Platform: x86_64-w64-mingw32/x64 (64-bit)\r## Running under: Windows 10 x64 (build 18363)\r## ## Matrix products: default\r## ## locale:\r## [1] LC_COLLATE=Korean_Korea.949 LC_CTYPE=Korean_Korea.949 ## [3] LC_MONETARY=Korean_Korea.949 LC_NUMERIC=C ## [5] LC_TIME=Korean_Korea.949 ## ## attached base packages:\r## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached):\r## [1] compiler_4.0.0 magrittr_1.5 bookdown_0.19 tools_4.0.0 ## [5] htmltools_0.4.0 yaml_2.2.1 Rcpp_1.0.4.6 stringi_1.4.6 ## [9] rmarkdown_2.1 blogdown_0.19 knitr_1.28 stringr_1.4.0 ## [13] digest_0.6.25 xfun_0.13 rlang_0.4.6 evaluate_0.14\rgetwd()\r## [1] \"D:/git/blog/content/posts\"\r경고표시나 중간중간 한글을 사용하면 문제가 많다. 그러는 경우 locale을 바꿔야 한다.\nSys.getlocale()\r## [1] \"LC_COLLATE=Korean_Korea.949;LC_CTYPE=Korean_Korea.949;LC_MONETARY=Korean_Korea.949;LC_NUMERIC=C;LC_TIME=Korean_Korea.949\"\rSys.setlocale() 로 원하는 설정을 할 수 있다.\n\r업데이트\r초기 설정 이후 시간이 지나면 R과 R studio 업데이트가 필요 할 수 있다. 먼저 R은 다음의 코드를 이용하면 된다.\n# install.packages('installr')\rinstallr::check.for.updates.R()\rinstallr::install.R()\rR studio의 경우 Help-Check for Update 를 확인해 보면된다.\n마지막으로 설치된 packages를 업데이트 해주면 된다.\nupdate.packages()\r\r","description":"","tags":["R","Rstudio","IDE","Git"],"title":"Data Science를 위한 R 초기 환경","uri":"/posts/r/1/"},{"categories":["R"],"content":"\r\r\r\r\r\r\r먼저 사용한 페키지이다.\nlibrary(tidyverse)\r## -- Attaching packages ----------------------------------------------------------------------------------------------------- tidyverse 1.3.0 --\r## √ ggplot2 3.3.0 √ purrr 0.3.4\r## √ tibble 3.0.1 √ dplyr 0.8.5\r## √ tidyr 1.0.3 √ stringr 1.4.0\r## √ readr 1.3.1 √ forcats 0.5.0\r## -- Conflicts -------------------------------------------------------------------------------------------------------- tidyverse_conflicts() --\r## x dplyr::filter() masks stats::filter()\r## x dplyr::lag() masks stats::lag()\rlibrary(rpart)\rlibrary(rpart.plot)\rlibrary(pROC)\r## Type 'citation(\"pROC\")' for a citation.\r## ## 다음의 패키지를 부착합니다: 'pROC'\r## The following objects are masked from 'package:stats':\r## ## cov, smooth, var\rlibrary(plotly)\r## ## 다음의 패키지를 부착합니다: 'plotly'\r## The following object is masked from 'package:ggplot2':\r## ## last_plot\r## The following object is masked from 'package:stats':\r## ## filter\r## The following object is masked from 'package:graphics':\r## ## layout\r다음으로 우리가 사용할 데이터이다. 데이터는 숙제 주소 중 하나인 https://www.openml.org/d/29 에서 가져왔다.\nraw_hw_tb = read_csv(\"data/dataset_29_credit-a.csv\",na=\"?\")\r## Parsed with column specification:\r## cols(\r## A1 = col_character(),\r## A2 = col_double(),\r## A3 = col_double(),\r## A4 = col_character(),\r## A5 = col_character(),\r## A6 = col_character(),\r## A7 = col_character(),\r## A8 = col_double(),\r## A9 = col_logical(),\r## A10 = col_logical(),\r## A11 = col_character(),\r## A12 = col_logical(),\r## A13 = col_character(),\r## A14 = col_character(),\r## A15 = col_double(),\r## class = col_character()\r## )\r해당자료는 Credit Approval로 credit card applications와 관련된 자료이다. Ross Quinlan의 자료로, 1987년 UCI에 공개된 자료이다. 모든 자료는 보안을 위해 다른 단어로 변경되었다. 정확히 각각의 변수가 의미하는 바는 알 수 없느나 홈페이지를 통해 각 변수들의 특성을 파악할 수 있다. 먼저 A1, A4, A5, A6, A7, A9, A10, A12, A13는 명목형 자료이다. 대부분은 2개의 범주로 구성되어 있으나, A6과 같은경우 15개의 범주로 구성되어 있다. 반면 A2, A3, A8, A11, A14, A15는 숫자형 범주이다. read_csv에서 보면 그 특성과 다르게 가져왔기에 이에 맞게 변수를 변환하였다. 또한 중간중간 NA가 있으나 나무모형을 사용하기에 그대로 사용하였다.\nhw_tb = raw_hw_tb %\u003e% mutate(\rA1=as.factor(A1), A4=as.factor(A4), A5=as.factor(A5), A6=as.factor(A6), A7=as.factor(A7),\rA9=as.factor(A9), A10=as.factor(A10), A12=as.factor(A12), A13=as.factor(A13),\rA2=as.numeric(A2), A3=as.numeric(A3), A8=as.numeric(A8), A11=as.numeric(A11),\rA14=as.numeric(A14), A15=as.numeric(A15),\rclass=as.factor(class)\r)\r자료의 구조와 총 개수를 보면 다음과 같다.\nstr(hw_tb)\r## tibble [690 x 16] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\r## $ A1 : Factor w/ 2 levels \"a\",\"b\": 2 1 1 2 2 2 2 1 2 2 ...\r## $ A2 : num [1:690] 30.8 58.7 24.5 27.8 20.2 ...\r## $ A3 : num [1:690] 0 4.46 0.5 1.54 5.62 ...\r## $ A4 : Factor w/ 3 levels \"l\",\"u\",\"y\": 2 2 2 2 2 2 2 2 3 3 ...\r## $ A5 : Factor w/ 3 levels \"g\",\"gg\",\"p\": 1 1 1 1 1 1 1 1 3 3 ...\r## $ A6 : Factor w/ 14 levels \"aa\",\"c\",\"cc\",..: 13 11 11 13 13 10 12 3 9 13 ...\r## $ A7 : Factor w/ 9 levels \"bb\",\"dd\",\"ff\",..: 8 4 4 8 8 8 4 8 4 8 ...\r## $ A8 : num [1:690] 1.25 3.04 1.5 3.75 1.71 ...\r## $ A9 : Factor w/ 2 levels \"FALSE\",\"TRUE\": 2 2 2 2 2 2 2 2 2 2 ...\r## $ A10 : Factor w/ 2 levels \"FALSE\",\"TRUE\": 2 2 1 2 1 1 1 1 1 1 ...\r## $ A11 : num [1:690] 1 6 0 5 0 0 0 0 0 0 ...\r## $ A12 : Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 1 1 2 1 2 2 1 1 2 ...\r## $ A13 : Factor w/ 3 levels \"g\",\"p\",\"s\": 1 1 1 1 3 1 1 1 1 1 ...\r## $ A14 : num [1:690] 202 43 280 100 120 360 164 80 180 52 ...\r## $ A15 : num [1:690] 0 560 824 3 0 ...\r## $ class: Factor w/ 2 levels \"-\",\"+\": 2 2 2 2 2 2 2 2 2 2 ...\rnrow(hw_tb)\r## [1] 690\r#1\r##1. Training 데이터와 Test 데이터를 50:50의 비율로 분할하시오. (단, 시드번호는 학번의 뒤자리수 4개를 사용하시오)\nset.seed(2010)\rn = sample(1:nrow(hw_tb), round(nrow(hw_tb)/2)) train = hw_tb[n,] test = hw_tb[-n,]\rc(nrow(train), nrow(test))\r## [1] 345 345\r#2~4\r##2. R 프로그램의 ‘rpart’ 명령어를 사용하여 의사결정나무를 수행하고자 한다.\r###단, hyper-parameter는 아래와 같이 조정한다.\r###A. minsplit = 1 ~ 46 (5의 간격으로)\r###B. cp = 0.001 ~ 0.01 (0.001의 간격으로)\r###C. xval = 0 으로 고정 (pruning 없음)\r###D. 그외 parameter 값들은 default 값을 사용\r##3. 위 2번의 조건에 맞는 의사결정나무를 training 데이터를 이용하여 생성하고, test 데이터를 이용하여 예측 정확도를 계산하고자 한다. 이때 예측정확도는 AUROC 값을 사용한다.\r##4. 3번의 결과, 총 110개의 AUROC 값을 구할 수 있다. 이를 minsplit과 cp 값의 조합에 따라 AUROC 값으로 3차원 포물선 그래프를 생성하시오. (3D surface plot)\nauc = matrix(NA,nrow=10,ncol=10)\rfor(i1 in 1:10){\rfor(i2 in 1:10){\rtree_control = rpart.control(minsplit = 5*i1-4, cp =0.001*i2, xval=0)\rtemp_tree = assign(paste('tree',5*i1-4,i2,sep='_'), rpart(class ~ . , data=train, method='class', control=tree_control) )\rtemp_prob = assign(paste('prob',5*i1-4,i2,sep='_'), predict(temp_tree, newdata=test, type=\"prob\") )\rtemp_roc = assign(paste('roc',5*i1-4,i2,sep='_'), roc(test$class ~ temp_prob[,2]) )\rauc[i1,i2]=temp_roc$auc\r}\r}\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r## Setting levels: control = -, case = +\r## Setting direction: controls \u003c cases\r2번 3번 4번 중간에 결과는 아래와 같은 객체를 통해 확인할 수 있다. 그 결과는 생략한다.\n각각의 모형(2번) : tree_(minsplit값)_(cp값*1000) 각각의 예측(3번) : prob_(minsplit값)_(cp값*1000) 각각의 roc(4번) : roc_(minsplit값)_(cp값*1000)\n해당 auroc를 이용하여 3d surface plot을 그리면 아래와 같다.\ncp = 0.001*1:10\rminsplit = 1:10*5-4\rrownames(auc)=cp\rcolnames(auc)=minsplit\rplot_ly(z = auc,x=cp,y=minsplit) %\u003e%\radd_surface() %\u003e%\rlayout(scene = list(\rxaxis = list(title = 'cp',tickvals=cp),\ryaxis = list(title = 'minsplit',tickvals=minsplit),\rzaxis = list(title = 'auc'))\r)\r\r{\"x\":{\"visdat\":{\"13c4489c2f01\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"13c4489c2f01\",\"attrs\":{\"13c4489c2f01\":{\"z\":[[0.775384615384615,0.775384615384615,0.760615384615385,0.712991452991453,0.760581196581196,0.760581196581196,0.866769230769231,0.866769230769231,0.866769230769231,0.876461538461538],[0.757333333333333,0.757333333333333,0.757333333333333,0.757811965811966,0.757811965811966,0.751846153846154,0.814581196581197,0.814581196581197,0.814581196581197,0.876461538461538],[0.878529914529915,0.878529914529915,0.878529914529915,0.878529914529915,0.874905982905983,0.874905982905983,0.873264957264957,0.873264957264957,0.873264957264957,0.888717948717949],[0.873931623931624,0.873931623931624,0.873931623931624,0.873931623931624,0.873931623931624,0.873931623931624,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.891897435897436,0.891897435897436,0.891897435897436,0.891897435897436,0.891897435897436,0.891897435897436,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436]],\"x\":[0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01],\"y\":[1,6,11,16,21,26,31,36,41,46],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"cp\",\"tickvals\":[0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01]},\"yaxis\":{\"title\":\"minsplit\",\"tickvals\":[1,6,11,16,21,26,31,36,41,46]},\"zaxis\":{\"title\":\"auc\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"data\":[{\"colorbar\":{\"title\":\"\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666668\",\"rgba(70,19,97,1)\"],[\"0.0833333333333336\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666666\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"z\":[[0.775384615384615,0.775384615384615,0.760615384615385,0.712991452991453,0.760581196581196,0.760581196581196,0.866769230769231,0.866769230769231,0.866769230769231,0.876461538461538],[0.757333333333333,0.757333333333333,0.757333333333333,0.757811965811966,0.757811965811966,0.751846153846154,0.814581196581197,0.814581196581197,0.814581196581197,0.876461538461538],[0.878529914529915,0.878529914529915,0.878529914529915,0.878529914529915,0.874905982905983,0.874905982905983,0.873264957264957,0.873264957264957,0.873264957264957,0.888717948717949],[0.873931623931624,0.873931623931624,0.873931623931624,0.873931623931624,0.873931623931624,0.873931623931624,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.891897435897436,0.891897435897436,0.891897435897436,0.891897435897436,0.891897435897436,0.891897435897436,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949,0.888717948717949],[0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436,0.887897435897436]],\"x\":[0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01],\"y\":[1,6,11,16,21,26,31,36,41,46],\"type\":\"surface\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r그래프는 ploty를 사용하였기에 html에서 종합적으로 볼 수 있다. 과제 제출하기 위해 해당 그래프를 printscreen해서 위에 첨부하였다.\n#5\r##5. 4번의 결과에서 예측정확도가 가장 높은 최적의 hyper-parameter 조합은 무엇인지 밝히시오.\n먼저 auc 행렬을 이용해 최댓값을 찾으면 다음의 위치이다.\nauc == max(auc)\r## 1 6 11 16 21 26 31 36 41 46\r## 0.001 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.002 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.003 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.004 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.005 TRUE TRUE TRUE TRUE TRUE TRUE FALSE FALSE FALSE FALSE\r## 0.006 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.007 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.008 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.009 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r## 0.01 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r즉 cp가 0.005이고 minsplit이 1, 6, 11, 16, 21일때 가장 좋은 auroc를 가진다. 즉 해당 조합이 최적의 hyper-parameter이다.\n","description":"","tags":["R Markdown"],"title":"데이터마이닝 - Decision Tree","uri":"/posts/report/2/"},{"categories":null,"content":"History of Blog 해당 블로그는 blogdown package를 바탕으로 제작되었습니다. 본 블로그는 최초 2020학년도 1학기 데이터사이언스 입문 수업에서 배운 내용을 바탕으로 만들어 졌으며, 추후 개인 블로그로 확장할 예정입니다.\nPortfolio 💻 About me  이청파 Lee Chungpa E-mail: leechungpa@gmail.com 사용 가능 언어 : Python, R, SQL 연세대학교 응용통계학과 4학년 재학중 연세대학교 공식언론사 연세춘추 116기 (2015.09 ~ 2016.12)  사진부 기자   연세대학교 국제캠퍼스 윤동주 하우스 RA (2019.03 ~ 2019.12)  📝 Study and Project 주간 음원차트 예측 Python, R, Machine Learning\nGithub Link\n음원 데이터를 활용한 음원순위 예측 프로젝트\n 현재는 데이터 크롤링 진행중 추후에 모델링을 통해 예측 모델 만들 예정  📚 Courses 현재까지 수강한 과목 리스트입니다.\n  선형대수\n  미적분학\n  통계학입문\n  통계방법론\n  회귀분석\n  시계열분석\n  금융리스크관리실무와통계학\n  수리통계학(1)\n  수리통계학(2)\n  이론통계학\n  데이터사이언스를위한확률과정\n  컴퓨터자료처리\n  데이터사이언스입문\n  딥러닝\n  데이터마이닝\n  ","description":"","tags":null,"title":"이력서","uri":"/about/"},{"categories":["R","data mining"],"content":"\r자료 불러오기\rlibrary(readxl)\rairbnb \u003c- read_excel(\"data/airbnb.xlsx\")\rstr(airbnb)\r## tibble [74,111 x 29] (S3: tbl_df/tbl/data.frame)\r## $ id : num [1:74111] 6901257 6304928 7919400 13418779 3808709 ...\r## $ log_price : num [1:74111] 5.01 5.13 4.98 6.62 4.74 ...\r## $ property_type : chr [1:74111] \"Apartment\" \"Apartment\" \"Apartment\" \"House\" ...\r## $ room_type : chr [1:74111] \"Entire home/apt\" \"Entire home/apt\" \"Entire home/apt\" \"Entire home/apt\" ...\r## $ amenities : chr [1:74111] \"{\\\"Wireless Internet\\\",\\\"Air conditioning\\\",Kitchen,Heating,\\\"Family/kid friendly\\\",Essentials,\\\"Hair dryer\\\",I\"| __truncated__ \"{\\\"Wireless Internet\\\",\\\"Air conditioning\\\",Kitchen,Heating,\\\"Family/kid friendly\\\",Washer,Dryer,\\\"Smoke detect\"| __truncated__ \"{TV,\\\"Cable TV\\\",\\\"Wireless Internet\\\",\\\"Air conditioning\\\",Kitchen,Breakfast,\\\"Buzzer/wireless intercom\\\",Heat\"| __truncated__ \"{TV,\\\"Cable TV\\\",Internet,\\\"Wireless Internet\\\",Kitchen,\\\"Indoor fireplace\\\",\\\"Buzzer/wireless intercom\\\",Heati\"| __truncated__ ...\r## $ accommodates : num [1:74111] 3 7 5 4 2 2 3 2 2 2 ...\r## $ bathrooms : num [1:74111] 1 1 1 1 1 1 1 1 1 1 ...\r## $ bed_type : chr [1:74111] \"Real Bed\" \"Real Bed\" \"Real Bed\" \"Real Bed\" ...\r## $ cancellation_policy : chr [1:74111] \"strict\" \"strict\" \"moderate\" \"flexible\" ...\r## $ cleaning_fee : logi [1:74111] TRUE TRUE TRUE TRUE TRUE TRUE ...\r## $ city : chr [1:74111] \"NYC\" \"NYC\" \"NYC\" \"SF\" ...\r## $ description : chr [1:74111] \"Beautiful, sunlit brownstone 1-bedroom in the loveliest neighborhood in Brooklyn. Blocks from the promenade and\"| __truncated__ \"Enjoy travelling during your stay in Manhattan. My place is centrally located near Times Square and Central Par\"| __truncated__ \"The Oasis comes complete with a full backyard with outdoor furniture to make the most of this summer vacation!!\"| __truncated__ \"This light-filled home-away-from-home is super clean and comes with all of the modern amenities travelers could\"| __truncated__ ...\r## $ first_review : POSIXct[1:74111], format: \"2018-06-16\" \"2005-08-17\" ...\r## $ host_has_profile_pic : chr [1:74111] \"t\" \"t\" \"t\" \"t\" ...\r## $ host_identity_verified: chr [1:74111] \"t\" \"f\" \"t\" \"t\" ...\r## $ host_response_rate : num [1:74111] NA 1 1 NA 1 1 1 1 1 1 ...\r## $ host_since : POSIXct[1:74111], format: \"2026-03-12\" \"2019-06-17\" ...\r## $ instant_bookable : chr [1:74111] \"f\" \"t\" \"t\" \"f\" ...\r## $ last_review : POSIXct[1:74111], format: \"2018-07-16\" \"2023-09-17\" ...\r## $ latitude : num [1:74111] 40.7 40.8 40.8 37.8 38.9 ...\r## $ longitude : num [1:74111] -74 -74 -73.9 -122.4 -77 ...\r## $ name : chr [1:74111] \"Beautiful brownstone 1-bedroom\" \"Superb 3BR Apt Located Near Times Square\" \"The Garden Oasis\" \"Beautiful Flat in the Heart of SF!\" ...\r## $ neighbourhood : chr [1:74111] \"Brooklyn Heights\" \"Hell's Kitchen\" \"Harlem\" \"Lower Haight\" ...\r## $ number_of_reviews : num [1:74111] 2 6 10 0 4 3 15 9 159 2 ...\r## $ review_scores_rating : num [1:74111] 100 93 92 NA 40 100 97 93 99 90 ...\r## $ thumbnail_url : chr [1:74111] \"https://a0.muscache.com/im/pictures/6d7cbbf7-c034-459c-bc82-6522c957627c.jpg?aki_policy=small\" \"https://a0.muscache.com/im/pictures/348a55fe-4b65-452a-b48a-bfecb3b58a66.jpg?aki_policy=small\" \"https://a0.muscache.com/im/pictures/6fae5362-9e3a-4fa9-aa54-bbd5ea26538d.jpg?aki_policy=small\" \"https://a0.muscache.com/im/pictures/72208dad-9c86-41ea-a735-43d933111063.jpg?aki_policy=small\" ...\r## $ zipcode : chr [1:74111] \"11201\" \"10019\" \"10027\" \"94117\" ...\r## $ bedrooms : num [1:74111] 1 3 1 2 0 1 1 1 1 1 ...\r## $ beds : num [1:74111] 1 3 3 2 1 1 1 1 1 1 ...\r\r데이터 전처리\r“property_type”은 ‘House’, ‘Apartment’, ’Other’ 등의 3범주로 변환하시오.\rattach(airbnb)\rairbnb$property_type[!(property_type=='House'| property_type=='Apartment')] = \"Other\"\rairbnb$property_type \u003c- as.factor(airbnb$property_type)\rlevels(airbnb$property_type)\r## [1] \"Apartment\" \"House\" \"Other\"\r\r“bed_type”은 ‘Bed’, ‘Other’ 등의 2범주로 변환하시오.\rReal Bed와 Airbed 는 Bed로, 나머지는 Other로 변환하였다.\nairbnb$bed_type[(bed_type=='Airbed'| bed_type=='Real Bed')] = \"Bed\"\rairbnb$bed_type[!(bed_type=='Airbed'| bed_type=='Real Bed')] = \"Other\"\rairbnb$bed_type \u003c- as.factor(airbnb$bed_type)\rlevels(airbnb$bed_type)\r## [1] \"Bed\" \"Other\"\rdetach(airbnb)\r\r“number_of_reviews”가 11개 이상인 데이터만 추출해서 분석에 사용하시오.\rairbnb \u003c- airbnb[airbnb$number_of_reviews\u003e=11 , 1:ncol(airbnb)]\r\r‘가격비(price_ratio)’ 변수를 생성하시오.\rairbnb$log_price \u003c- exp(airbnb$log_price)\rmean_price \u003c- aggregate(log_price ~ city, airbnb, mean)\rnames(mean_price) \u003c-c (\"city\",\"mean_price\")\rf_airbnb \u003c- merge(x =airbnb,y=mean_price,by=\"city\",all.x=T)\rf_airbnb$price_ratio \u003c- f_airbnb$log_price/f_airbnb$mean_price*100\r\r\r데이터 분석\r1. “가격비(price_ratio)” 변수의 평균과 표준편차를 답하시오.\rmean(f_airbnb$price_ratio)\r## [1] 100\rsd(f_airbnb$price_ratio)\r## [1] 83.72338\r\r2. “가격비(price_ratio)”를 종속변수로 하여 선형회귀분석을 수행하시오.\r먼저 시행에 앞서 불필요한 변수를 제거한다. 제거한 것들은 아래와 같다.\ramenities나 description의 경우 길이로 변환하여 분석하였으나 큰 의미가 없어 제거하고 분석하였다.\r(y변수 계산에 필요했던 것들 및 url이나 설명같이 의미없는 것들을 제외한다.)\n\rdescription\n\ramenities\n\rname\n\rneighbourhood\n\rthumbnail_url\n\rid\n\rlog_price\n\rmean_price\n\r\rf_df \u003c- subset(f_airbnb, select = -c(description, amenities, name, neighbourhood, thumbnail_url, id, log_price, mean_price))\rcharacter를 factor로 변환한다.\r순서가 있는 cancellation_policy의 경우 순서를 준다.\nfind_char_col\u003c-NA\rfor (i in 1:ncol(f_df)){\rfind_char_col[i] \u003c- is.character(f_df[,i])\r}\rchar_col \u003c- colnames(f_df)[find_char_col]\rf_df[char_col] \u003c- lapply(f_df[char_col] , factor)\rf_df$cleaning_fee \u003c- as.factor(f_df$cleaning_fee)\rcancellation_policy에서도 “super_strict_60”는 2개뿐이므로“super_strict_30”에 포함시켰다. (즉 super_strict_30는 super_strict_30+를 의미한다.)\nwhich(f_df$cancellation_policy == \"super_strict_60\")\r## [1] 6558 13642\rf_df$cancellation_policy[which(f_df$cancellation_policy == \"super_strict_60\")] \u003c- \"super_strict_30\"\rf_df$cancellation_policy \u003c- factor(f_df$cancellation_policy,levels=c(\"flexible\", \"moderate\", \"strict\", \"super_strict_30\"), order=T)\r먼저 각각의 plot을 그려본다. (결과는 생략 eval=FALSE)\nfor (i in 1:(ncol(f_df)-1)) {\rplot(f_df$price_ratio~f_df[[i]],xlab=colnames(f_df)[i])\r}\r대략적으로 눈으로 보기에 차이가 나타나는 것은 다음과 같다. (진한 것은 더욱 두드러 진 것)\n\rroom_type\raccommodates\rbathrooms\rbed_type\rcancellation_policy\rcleaning_fee\rhost_has_profile_pic\rhost_identity_verified\rhost_response_rate\rinstant_bookable\rlatitude\rlongitude\rnumber_of_reviews\rreview_scores_rating\rbedrooms\rbeds\r\r그런데 latitude와 longitude는 사실상 zipcode에 그 데이터에 의미가 어느정도 포함된다고 판단하여 제거하였다.\n또한 zipcode는 너무 자세하므로 분석의 편의상 앞의 2자리만 사용하였다. (city는 이 zipcode에 포함되므로 생략하였다.)\n그리고 host_has_profile_pic의 경우 f는 28개뿐으로 매우 적으므로 변수를 사용하지 않는다.\nsummary( lm( price_ratio ~ latitude, data=f_df))\r## ## Call:\r## lm(formula = price_ratio ~ latitude, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -92.71 -47.41 -22.56 19.19 1323.76 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 9.996e+01 6.061e+00 16.492 \u003c2e-16 ***\r## latitude 9.344e-04 1.574e-01 0.006 0.995 ## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 83.72 on 29014 degrees of freedom\r## Multiple R-squared: 1.215e-09, Adjusted R-squared: -3.446e-05 ## F-statistic: 3.525e-05 on 1 and 29014 DF, p-value: 0.9953\rsummary( lm( price_ratio ~ longitude, data=f_df))\r## ## Call:\r## lm(formula = price_ratio ~ longitude, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -92.67 -47.36 -22.63 19.12 1323.69 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 99.765008 2.164951 46.082 \u003c2e-16 ***\r## longitude -0.002513 0.022547 -0.111 0.911 ## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 83.72 on 29014 degrees of freedom\r## Multiple R-squared: 4.281e-07, Adjusted R-squared: -3.404e-05 ## F-statistic: 0.01242 on 1 and 29014 DF, p-value: 0.9113\rf_df$zipcode \u003c- as.factor(substr(f_airbnb$zipcode,1,2))\rtable(f_df$host_has_profile_pic)\r## ## f t ## 28 28924\r그래서 이를 제외한 다음을 분석변수로 한다.\n\rroom_type\rproperty_type\raccommodates\rbathrooms\rbed_type\rcancellation_policy\rcleaning_fee\rhost_identity_verified\rhost_response_rate\rinstant_bookable\rfirst_review\rnumber_of_reviews\rhost_since\rreview_scores_rating\rlast_review\rbedrooms\n\rbeds\rzipcode\r\r정확히 하기 위해 trellis plot을 그려보았다.\nlibrary(lattice)\rmypanel \u003c- function(x, y) {\rpanel.xyplot(x, y)\rpanel.loess(x, y, col=\"red\", lwd=2, lty=2) }\rxyplot(price_ratio ~ room_type, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ accommodates, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ bathrooms, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ bed_type, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ cancellation_policy, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ cleaning_fee, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ host_identity_verified , data=f_df,panel=mypanel)\rxyplot(price_ratio ~ host_response_rate, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ instant_bookable , data=f_df,panel=mypanel)\rxyplot(price_ratio ~ number_of_reviews, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ review_scores_rating, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ bedrooms, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ beds, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ zipcode, data=f_df,panel=mypanel)\rxyplot(price_ratio ~ last_review , data=f_df,panel=mypanel)\rxyplot(price_ratio ~ host_since , data=f_df,panel=mypanel)\rxyplot(price_ratio ~ first_review , data=f_df,panel=mypanel)\rxyplot(price_ratio ~ property_type , data=f_df,panel=mypanel)\r이제 18개의 값들을 이용해 선형회귀분석을 실시한다. 그전에 결측치NA가 포함된 행은 제거하고 실시한다.\nf_df = na.omit(f_df)\rlm1 = lm(price_ratio ~ room_type + property_type + accommodates + bathrooms + bed_type + cancellation_policy + cleaning_fee + host_identity_verified + host_response_rate + instant_bookable + first_review + number_of_reviews + host_since + review_scores_rating + last_review + bedrooms + beds + zipcode , data = f_df)\rsummary(lm1)\r## ## Call:\r## lm(formula = price_ratio ~ room_type + property_type + accommodates + ## bathrooms + bed_type + cancellation_policy + cleaning_fee + ## host_identity_verified + host_response_rate + instant_bookable + ## first_review + number_of_reviews + host_since + review_scores_rating + ## last_review + bedrooms + beds + zipcode, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -310.42 -25.81 -2.43 18.11 995.55 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) -9.898e+01 8.209e+00 -12.058 \u003c 2e-16 ***\r## room_typePrivate room -4.603e+01 8.669e-01 -53.089 \u003c 2e-16 ***\r## room_typeShared room -7.641e+01 2.538e+00 -30.105 \u003c 2e-16 ***\r## property_typeHouse 4.183e+00 9.150e-01 4.572 4.85e-06 ***\r## property_typeOther 6.771e+00 1.112e+00 6.087 1.17e-09 ***\r## accommodates 8.450e+00 3.292e-01 25.671 \u003c 2e-16 ***\r## bathrooms 3.515e+01 7.626e-01 46.087 \u003c 2e-16 ***\r## bed_typeOther 1.908e+00 2.279e+00 0.837 0.402372 ## cancellation_policy.L 5.800e+01 6.962e+00 8.330 \u003c 2e-16 ***\r## cancellation_policy.Q 3.702e+01 5.201e+00 7.117 1.13e-12 ***\r## cancellation_policy.C 1.434e+01 2.375e+00 6.039 1.57e-09 ***\r## cleaning_feeTRUE -3.377e+00 1.006e+00 -3.357 0.000789 ***\r## host_identity_verifiedt 2.158e+00 8.533e-01 2.529 0.011431 * ## host_response_rate -1.935e+01 3.508e+00 -5.516 3.50e-08 ***\r## instant_bookablet -4.545e+00 7.645e-01 -5.944 2.81e-09 ***\r## first_review -3.548e-11 5.496e-10 -0.065 0.948532 ## number_of_reviews -4.118e-02 7.218e-03 -5.705 1.17e-08 ***\r## host_since 1.791e-10 5.406e-10 0.331 0.740412 ## review_scores_rating 2.022e+00 7.722e-02 26.187 \u003c 2e-16 ***\r## last_review 7.622e-10 4.587e-10 1.662 0.096593 . ## bedrooms 2.588e+01 6.572e-01 39.373 \u003c 2e-16 ***\r## beds -3.614e+00 4.786e-01 -7.551 4.46e-14 ***\r## zipcode11 -4.252e+01 1.112e+00 -38.245 \u003c 2e-16 ***\r## zipcode1m -3.478e+01 5.632e+01 -0.617 0.536912 ## zipcode20 -4.165e+01 1.547e+00 -26.924 \u003c 2e-16 ***\r## zipcode21 -3.428e+01 1.739e+00 -19.714 \u003c 2e-16 ***\r## zipcode22 -1.917e+01 8.438e+00 -2.272 0.023073 * ## zipcode24 -4.208e+01 5.633e+01 -0.747 0.454991 ## zipcode60 -4.246e+01 1.562e+00 -27.184 \u003c 2e-16 ***\r## zipcode90 -3.486e+01 1.107e+00 -31.483 \u003c 2e-16 ***\r## zipcode91 -5.649e+01 1.742e+00 -32.428 \u003c 2e-16 ***\r## zipcode92 -6.254e+01 5.634e+01 -1.110 0.266986 ## zipcode93 -7.250e+01 1.567e+01 -4.628 3.71e-06 ***\r## zipcode94 -3.287e+01 1.418e+00 -23.189 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 56.31 on 27002 degrees of freedom\r## Multiple R-squared: 0.5462, Adjusted R-squared: 0.5456 ## F-statistic: 984.8 on 33 and 27002 DF, p-value: \u003c 2.2e-16\r위를 보면 유의미하지 않은 p-value가 많다. 이제 stepwise를 해서 제거한다.\nlm2 = step(lm1, direction = 'both')\r## Start: AIC=217990.5\r## price_ratio ~ room_type + property_type + accommodates + bathrooms + ## bed_type + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + first_review + number_of_reviews + ## host_since + review_scores_rating + last_review + bedrooms + ## beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - first_review 1 13 85615864 217989\r## - host_since 1 348 85616199 217989\r## - bed_type 1 2223 85618074 217989\r## \u003cnone\u003e 85615851 217990\r## - last_review 1 8755 85624606 217991\r## - host_identity_verified 1 20286 85636137 217995\r## - cleaning_fee 1 35736 85651586 218000\r## - host_response_rate 1 96468 85712319 218019\r## - number_of_reviews 1 103211 85719062 218021\r## - instant_bookable 1 112043 85727894 218024\r## - property_type 2 144262 85760113 218032\r## - beds 1 180785 85796636 218046\r## - cancellation_policy 3 503380 86119231 218143\r## - accommodates 1 2089553 87705404 218640\r## - review_scores_rating 1 2174363 87790214 218667\r## - bedrooms 1 4915304 90531154 219498\r## - zipcode 12 6500593 92116444 219945\r## - bathrooms 1 6734757 92350607 220036\r## - room_type 2 10116125 95731976 221006\r## ## Step: AIC=217988.5\r## price_ratio ~ room_type + property_type + accommodates + bathrooms + ## bed_type + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## host_since + review_scores_rating + last_review + bedrooms + ## beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - host_since 1 349 85616213 217987\r## - bed_type 1 2224 85618088 217987\r## \u003cnone\u003e 85615864 217989\r## - last_review 1 8763 85624627 217989\r## + first_review 1 13 85615851 217990\r## - host_identity_verified 1 20283 85636147 217993\r## - cleaning_fee 1 35747 85651611 217998\r## - host_response_rate 1 96497 85712361 218017\r## - number_of_reviews 1 103228 85719092 218019\r## - instant_bookable 1 112052 85727916 218022\r## - property_type 2 144250 85760114 218030\r## - beds 1 180804 85796668 218044\r## - cancellation_policy 3 503371 86119235 218141\r## - accommodates 1 2089584 87705448 218638\r## - review_scores_rating 1 2174743 87790607 218665\r## - bedrooms 1 4915310 90531174 219496\r## - zipcode 12 6500955 92116819 219943\r## - bathrooms 1 6734768 92350632 220034\r## - room_type 2 10116180 95732044 221004\r## ## Step: AIC=217986.6\r## price_ratio ~ room_type + property_type + accommodates + bathrooms + ## bed_type + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + last_review + bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - bed_type 1 2238 85618451 217985\r## \u003cnone\u003e 85616213 217987\r## - last_review 1 8739 85624953 217987\r## + host_since 1 349 85615864 217989\r## + first_review 1 14 85616199 217989\r## - host_identity_verified 1 20254 85636467 217991\r## - cleaning_fee 1 35785 85651998 217996\r## - host_response_rate 1 96522 85712735 218015\r## - number_of_reviews 1 103088 85719301 218017\r## - instant_bookable 1 112180 85728393 218020\r## - property_type 2 144324 85760538 218028\r## - beds 1 180830 85797044 218042\r## - cancellation_policy 3 503161 86119374 218139\r## - accommodates 1 2089343 87705556 218636\r## - review_scores_rating 1 2174719 87790932 218663\r## - bedrooms 1 4916145 90532358 219494\r## - zipcode 12 6500763 92116976 219941\r## - bathrooms 1 6734710 92350923 220032\r## - room_type 2 10120958 95737171 221003\r## ## Step: AIC=217985.3\r## price_ratio ~ room_type + property_type + accommodates + bathrooms + ## cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + last_review + bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## \u003cnone\u003e 85618451 217985\r## - last_review 1 8687 85627138 217986\r## + bed_type 1 2238 85616213 217987\r## + host_since 1 363 85618088 217987\r## + first_review 1 15 85618435 217987\r## - host_identity_verified 1 20365 85638815 217990\r## - cleaning_fee 1 35751 85654202 217995\r## - host_response_rate 1 96483 85714934 218014\r## - number_of_reviews 1 102833 85721284 218016\r## - instant_bookable 1 113036 85731487 218019\r## - property_type 2 144046 85762497 218027\r## - beds 1 182147 85800598 218041\r## - cancellation_policy 3 501866 86120317 218137\r## - accommodates 1 2090219 87708670 218635\r## - review_scores_rating 1 2175653 87794104 218662\r## - bedrooms 1 4917159 90535610 219493\r## - zipcode 12 6501272 92119723 219940\r## - bathrooms 1 6732473 92350924 220030\r## - room_type 2 10195031 95813482 221023\rsummary(lm2)\r## ## Call:\r## lm(formula = price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + last_review + bedrooms + beds + zipcode, ## data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -310.29 -25.79 -2.43 18.08 995.53 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) -9.878e+01 8.141e+00 -12.134 \u003c 2e-16 ***\r## room_typePrivate room -4.600e+01 8.659e-01 -53.122 \u003c 2e-16 ***\r## room_typeShared room -7.604e+01 2.499e+00 -30.431 \u003c 2e-16 ***\r## property_typeHouse 4.171e+00 9.148e-01 4.560 5.13e-06 ***\r## property_typeOther 6.772e+00 1.112e+00 6.088 1.16e-09 ***\r## accommodates 8.451e+00 3.291e-01 25.676 \u003c 2e-16 ***\r## bathrooms 3.513e+01 7.624e-01 46.081 \u003c 2e-16 ***\r## cancellation_policy.L 5.795e+01 6.961e+00 8.324 \u003c 2e-16 ***\r## cancellation_policy.Q 3.698e+01 5.200e+00 7.112 1.17e-12 ***\r## cancellation_policy.C 1.434e+01 2.374e+00 6.039 1.57e-09 ***\r## cleaning_feeTRUE -3.377e+00 1.006e+00 -3.358 0.000786 ***\r## host_identity_verifiedt 2.162e+00 8.532e-01 2.534 0.011269 * ## host_response_rate -1.935e+01 3.507e+00 -5.516 3.49e-08 ***\r## instant_bookablet -4.563e+00 7.642e-01 -5.971 2.39e-09 ***\r## number_of_reviews -4.110e-02 7.216e-03 -5.695 1.25e-08 ***\r## review_scores_rating 2.023e+00 7.721e-02 26.196 \u003c 2e-16 ***\r## last_review 7.592e-10 4.587e-10 1.655 0.097875 . ## bedrooms 2.588e+01 6.572e-01 39.382 \u003c 2e-16 ***\r## beds -3.626e+00 4.784e-01 -7.580 3.58e-14 ***\r## zipcode11 -4.252e+01 1.112e+00 -38.246 \u003c 2e-16 ***\r## zipcode1m -3.483e+01 5.632e+01 -0.618 0.536327 ## zipcode20 -4.165e+01 1.547e+00 -26.930 \u003c 2e-16 ***\r## zipcode21 -3.428e+01 1.739e+00 -19.714 \u003c 2e-16 ***\r## zipcode22 -1.922e+01 8.438e+00 -2.278 0.022721 * ## zipcode24 -4.215e+01 5.632e+01 -0.748 0.454229 ## zipcode60 -4.248e+01 1.562e+00 -27.202 \u003c 2e-16 ***\r## zipcode90 -3.486e+01 1.107e+00 -31.487 \u003c 2e-16 ***\r## zipcode91 -5.649e+01 1.742e+00 -32.430 \u003c 2e-16 ***\r## zipcode92 -6.251e+01 5.634e+01 -1.110 0.267158 ## zipcode93 -7.254e+01 1.566e+01 -4.631 3.66e-06 ***\r## zipcode94 -3.287e+01 1.417e+00 -23.192 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 56.31 on 27005 degrees of freedom\r## Multiple R-squared: 0.5462, Adjusted R-squared: 0.5457 ## F-statistic: 1083 on 30 and 27005 DF, p-value: \u003c 2.2e-16\r이후 분석에서 p-value가 유의미하지 않은 last_review 를 제거하고 실시한다.\n\r\r회귀진단\rplot(lm2,which=1)\rplot(lm2,which=2)\r잔차에서 메가폰 형태가 나타남을 알수 있다. 또한 QQ플랏도 문제가 있음을 알 수 있다. Y변수의 변환의 필요성이 있으므로 Y’=logY로 변환하였다.\nf_df$log_price_ratio \u003c- log(f_df$price_ratio)\rlm3 = lm(log_price_ratio ~ room_type + property_type + accommodates + bathrooms + cancellation_policy + cleaning_fee + host_identity_verified + host_response_rate + instant_bookable + number_of_reviews + review_scores_rating + bedrooms + beds + zipcode, data = f_df)\rlm4 = step(lm3, direction = 'both')\r## Start: AIC=-54314.95\r## log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - cleaning_fee 1 0.00 3618.2 -54317\r## - number_of_reviews 1 0.08 3618.2 -54316\r## \u003cnone\u003e 3618.2 -54315\r## - host_identity_verified 1 1.21 3619.4 -54308\r## - host_response_rate 1 4.82 3623.0 -54281\r## - instant_bookable 1 7.14 3625.3 -54264\r## - property_type 2 7.92 3626.1 -54260\r## - cancellation_policy 3 21.45 3639.6 -54161\r## - beds 1 21.10 3639.3 -54160\r## - bathrooms 1 79.59 3697.7 -53729\r## - accommodates 1 131.11 3749.3 -53355\r## - review_scores_rating 1 188.21 3806.4 -52946\r## - bedrooms 1 216.57 3834.7 -52745\r## - zipcode 12 462.42 4080.6 -51087\r## - room_type 2 1779.04 5397.2 -43507\r## ## Step: AIC=-54316.91\r## log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - number_of_reviews 1 0.08 3618.2 -54318\r## \u003cnone\u003e 3618.2 -54317\r## + cleaning_fee 1 0.00 3618.2 -54315\r## - host_identity_verified 1 1.21 3619.4 -54310\r## - host_response_rate 1 4.84 3623.0 -54283\r## - instant_bookable 1 7.16 3625.3 -54265\r## - property_type 2 7.92 3626.1 -54262\r## - beds 1 21.11 3639.3 -54162\r## - cancellation_policy 3 21.72 3639.9 -54161\r## - bathrooms 1 79.62 3697.8 -53730\r## - accommodates 1 131.42 3749.6 -53354\r## - review_scores_rating 1 188.30 3806.5 -52947\r## - bedrooms 1 216.56 3834.7 -52747\r## - zipcode 12 462.51 4080.7 -51089\r## - room_type 2 1827.08 5445.2 -43269\r## ## Step: AIC=-54318.33\r## log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + review_scores_rating + ## bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## \u003cnone\u003e 3618.2 -54318\r## + number_of_reviews 1 0.08 3618.2 -54317\r## + cleaning_fee 1 0.00 3618.2 -54316\r## - host_identity_verified 1 1.16 3619.4 -54312\r## - host_response_rate 1 4.95 3623.2 -54283\r## - instant_bookable 1 7.27 3625.5 -54266\r## - property_type 2 7.97 3626.2 -54263\r## - cancellation_policy 3 21.66 3639.9 -54163\r## - beds 1 21.15 3639.4 -54163\r## - bathrooms 1 79.88 3698.1 -53730\r## - accommodates 1 131.34 3749.6 -53356\r## - review_scores_rating 1 188.57 3806.8 -52947\r## - bedrooms 1 218.14 3836.4 -52738\r## - zipcode 12 462.64 4080.9 -51089\r## - room_type 2 1828.54 5446.8 -43264\r그 결과는 아래와 같다.\nsummary(lm4)\r## ## Call:\r## lm(formula = log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + review_scores_rating + ## bedrooms + beds + zipcode, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.51557 -0.22551 -0.00287 0.22588 2.52586 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 2.8112298 0.0525988 53.447 \u003c 2e-16 ***\r## room_typePrivate room -0.5855993 0.0055699 -105.136 \u003c 2e-16 ***\r## room_typeShared room -1.1375240 0.0161312 -70.517 \u003c 2e-16 ***\r## property_typeHouse -0.0183360 0.0059407 -3.087 0.00203 ** ## property_typeOther 0.0422432 0.0072288 5.844 5.16e-09 ***\r## accommodates 0.0668736 0.0021358 31.311 \u003c 2e-16 ***\r## bathrooms 0.1209281 0.0049524 24.418 \u003c 2e-16 ***\r## cancellation_policy.L 0.2933262 0.0452494 6.482 9.18e-11 ***\r## cancellation_policy.Q 0.1616865 0.0337823 4.786 1.71e-06 ***\r## cancellation_policy.C 0.0664165 0.0154332 4.303 1.69e-05 ***\r## host_identity_verifiedt 0.0162382 0.0055087 2.948 0.00320 ** ## host_response_rate -0.1381528 0.0227264 -6.079 1.23e-09 ***\r## instant_bookablet -0.0365163 0.0049570 -7.367 1.80e-13 ***\r## review_scores_rating 0.0188152 0.0005015 37.518 \u003c 2e-16 ***\r## bedrooms 0.1719812 0.0042620 40.352 \u003c 2e-16 ***\r## beds -0.0390361 0.0031066 -12.566 \u003c 2e-16 ***\r## zipcode11 -0.3585074 0.0072259 -49.614 \u003c 2e-16 ***\r## zipcode1m -0.3950436 0.3661121 -1.079 0.28059 ## zipcode20 -0.2976181 0.0100374 -29.651 \u003c 2e-16 ***\r## zipcode21 -0.2358253 0.0112927 -20.883 \u003c 2e-16 ***\r## zipcode22 -0.1539659 0.0548451 -2.807 0.00500 ** ## zipcode24 -0.6528374 0.3661251 -1.783 0.07458 . ## zipcode60 -0.3329465 0.0101308 -32.865 \u003c 2e-16 ***\r## zipcode90 -0.2835116 0.0071819 -39.476 \u003c 2e-16 ***\r## zipcode91 -0.5014514 0.0112977 -44.385 \u003c 2e-16 ***\r## zipcode92 -0.8951543 0.3661830 -2.445 0.01451 * ## zipcode93 -0.6850067 0.1017839 -6.730 1.73e-11 ***\r## zipcode94 -0.2315125 0.0091763 -25.229 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.366 on 27008 degrees of freedom\r## Multiple R-squared: 0.6588, Adjusted R-squared: 0.6584 ## F-statistic: 1931 on 27 and 27008 DF, p-value: \u003c 2.2e-16\rplot(lm4,which=1)\rplot(lm4,which=2)\r## Warning: not plotting observations with leverage one:\r## 1413, 8437, 20636\r잔차의 패턴이 어느정도 감소함을 알 수 있다.\nsummary(lm3)\r## ## Call:\r## lm(formula = log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + bedrooms + beds + zipcode, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.51722 -0.22532 -0.00299 0.22586 2.52411 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 2.813e+00 5.270e-02 53.368 \u003c 2e-16 ***\r## room_typePrivate room -5.856e-01 5.629e-03 -104.034 \u003c 2e-16 ***\r## room_typeShared room -1.138e+00 1.624e-02 -70.065 \u003c 2e-16 ***\r## property_typeHouse -1.814e-02 5.946e-03 -3.051 0.00228 ** ## property_typeOther 4.224e-02 7.230e-03 5.842 5.21e-09 ***\r## accommodates 6.693e-02 2.140e-03 31.282 \u003c 2e-16 ***\r## bathrooms 1.208e-01 4.956e-03 24.374 \u003c 2e-16 ***\r## cancellation_policy.L 2.931e-01 4.525e-02 6.477 9.49e-11 ***\r## cancellation_policy.Q 1.610e-01 3.380e-02 4.764 1.91e-06 ***\r## cancellation_policy.C 6.631e-02 1.543e-02 4.296 1.74e-05 ***\r## cleaning_feeTRUE -1.157e-03 6.536e-03 -0.177 0.85946 ## host_identity_verifiedt 1.670e-02 5.546e-03 3.011 0.00261 ** ## host_response_rate -1.368e-01 2.280e-02 -5.998 2.02e-09 ***\r## instant_bookablet -3.627e-02 4.968e-03 -7.301 2.93e-13 ***\r## number_of_reviews -3.647e-05 4.691e-05 -0.778 0.43683 ## review_scores_rating 1.881e-02 5.018e-04 37.481 \u003c 2e-16 ***\r## bedrooms 1.718e-01 4.272e-03 40.205 \u003c 2e-16 ***\r## beds -3.903e-02 3.110e-03 -12.549 \u003c 2e-16 ***\r## zipcode11 -3.585e-01 7.226e-03 -49.616 \u003c 2e-16 ***\r## zipcode1m -3.950e-01 3.661e-01 -1.079 0.28064 ## zipcode20 -2.975e-01 1.004e-02 -29.637 \u003c 2e-16 ***\r## zipcode21 -2.355e-01 1.130e-02 -20.839 \u003c 2e-16 ***\r## zipcode22 -1.539e-01 5.485e-02 -2.805 0.00503 ** ## zipcode24 -6.537e-01 3.661e-01 -1.785 0.07423 . ## zipcode60 -3.330e-01 1.014e-02 -32.848 \u003c 2e-16 ***\r## zipcode90 -2.834e-01 7.186e-03 -39.434 \u003c 2e-16 ***\r## zipcode91 -5.019e-01 1.131e-02 -44.361 \u003c 2e-16 ***\r## zipcode92 -8.944e-01 3.662e-01 -2.442 0.01460 * ## zipcode93 -6.861e-01 1.018e-01 -6.738 1.64e-11 ***\r## zipcode94 -2.309e-01 9.213e-03 -25.062 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.366 on 27006 degrees of freedom\r## Multiple R-squared: 0.6588, Adjusted R-squared: 0.6584 ## F-statistic: 1798 on 29 and 27006 DF, p-value: \u003c 2.2e-16\r다만 p-value를 구해보면 유의미하지 않은 변수가 다시 나타나므로 stepwise를 실시해 본다. 그전에 number_of_reviews가 유의미 하지 않는 다고 나온다. 하지만 number_of_reviews는 다른 숫자자료에 비해 분산이 크다. 실제로 number_of_reviews와 비교해보면 10배 정도 차이가 난다. 이를 보정해 주기 위해 나눈값을 해봐도 결과는 동일하게 유의미 하지 않는다고 나온다.\nsd(f_df$review_scores_rating, na.rm=TRUE)\r## [1] 4.655876\rsd(f_df$number_of_reviews) \r## [1] 48.80326\rf_df$standard_number_of_reviews \u003c- f_df$number_of_reviews/sd(f_df$review_scores_rating, na.rm=TRUE)\rtemp_lm = lm(log_price_ratio ~ room_type + accommodates + bathrooms + cancellation_policy + cleaning_fee + host_response_rate + instant_bookable + standard_number_of_reviews + review_scores_rating + bedrooms + beds, data = f_df)\rsummary(temp_lm)\r## ## Call:\r## lm(formula = log_price_ratio ~ room_type + accommodates + bathrooms + ## cancellation_policy + cleaning_fee + host_response_rate + ## instant_bookable + standard_number_of_reviews + review_scores_rating + ## bedrooms + beds, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.59858 -0.25391 -0.01335 0.24299 2.54936 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 2.8699063 0.0556688 51.553 \u003c 2e-16 ***\r## room_typePrivate room -0.6022161 0.0057959 -103.904 \u003c 2e-16 ***\r## room_typeShared room -1.1298223 0.0173091 -65.273 \u003c 2e-16 ***\r## accommodates 0.0634022 0.0022744 27.876 \u003c 2e-16 ***\r## bathrooms 0.1074901 0.0052103 20.630 \u003c 2e-16 ***\r## cancellation_policy.L 0.3217257 0.0481716 6.679 2.46e-11 ***\r## cancellation_policy.Q 0.1491561 0.0359783 4.146 3.40e-05 ***\r## cancellation_policy.C 0.0559756 0.0164257 3.408 0.000656 ***\r## cleaning_feeTRUE 0.0046765 0.0069336 0.674 0.500018 ## host_response_rate -0.2032507 0.0242706 -8.374 \u003c 2e-16 ***\r## instant_bookablet -0.0380744 0.0052724 -7.221 5.28e-13 ***\r## standard_number_of_reviews 0.0000952 0.0002299 0.414 0.678769 ## review_scores_rating 0.0166253 0.0005285 31.456 \u003c 2e-16 ***\r## bedrooms 0.1667024 0.0045023 37.026 \u003c 2e-16 ***\r## beds -0.0384741 0.0033131 -11.613 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.3907 on 27021 degrees of freedom\r## Multiple R-squared: 0.6111, Adjusted R-squared: 0.6109 ## F-statistic: 3032 on 14 and 27021 DF, p-value: \u003c 2.2e-16\r이제 기존의 변수를 활용하여 stepwise를 실시해 본다\nlm4 = step(lm3, direction = 'both')\r## Start: AIC=-54314.95\r## log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + cleaning_fee + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - cleaning_fee 1 0.00 3618.2 -54317\r## - number_of_reviews 1 0.08 3618.2 -54316\r## \u003cnone\u003e 3618.2 -54315\r## - host_identity_verified 1 1.21 3619.4 -54308\r## - host_response_rate 1 4.82 3623.0 -54281\r## - instant_bookable 1 7.14 3625.3 -54264\r## - property_type 2 7.92 3626.1 -54260\r## - cancellation_policy 3 21.45 3639.6 -54161\r## - beds 1 21.10 3639.3 -54160\r## - bathrooms 1 79.59 3697.7 -53729\r## - accommodates 1 131.11 3749.3 -53355\r## - review_scores_rating 1 188.21 3806.4 -52946\r## - bedrooms 1 216.57 3834.7 -52745\r## - zipcode 12 462.42 4080.6 -51087\r## - room_type 2 1779.04 5397.2 -43507\r## ## Step: AIC=-54316.91\r## log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + number_of_reviews + ## review_scores_rating + bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## - number_of_reviews 1 0.08 3618.2 -54318\r## \u003cnone\u003e 3618.2 -54317\r## + cleaning_fee 1 0.00 3618.2 -54315\r## - host_identity_verified 1 1.21 3619.4 -54310\r## - host_response_rate 1 4.84 3623.0 -54283\r## - instant_bookable 1 7.16 3625.3 -54265\r## - property_type 2 7.92 3626.1 -54262\r## - beds 1 21.11 3639.3 -54162\r## - cancellation_policy 3 21.72 3639.9 -54161\r## - bathrooms 1 79.62 3697.8 -53730\r## - accommodates 1 131.42 3749.6 -53354\r## - review_scores_rating 1 188.30 3806.5 -52947\r## - bedrooms 1 216.56 3834.7 -52747\r## - zipcode 12 462.51 4080.7 -51089\r## - room_type 2 1827.08 5445.2 -43269\r## ## Step: AIC=-54318.33\r## log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + review_scores_rating + ## bedrooms + beds + zipcode\r## ## Df Sum of Sq RSS AIC\r## \u003cnone\u003e 3618.2 -54318\r## + number_of_reviews 1 0.08 3618.2 -54317\r## + cleaning_fee 1 0.00 3618.2 -54316\r## - host_identity_verified 1 1.16 3619.4 -54312\r## - host_response_rate 1 4.95 3623.2 -54283\r## - instant_bookable 1 7.27 3625.5 -54266\r## - property_type 2 7.97 3626.2 -54263\r## - cancellation_policy 3 21.66 3639.9 -54163\r## - beds 1 21.15 3639.4 -54163\r## - bathrooms 1 79.88 3698.1 -53730\r## - accommodates 1 131.34 3749.6 -53356\r## - review_scores_rating 1 188.57 3806.8 -52947\r## - bedrooms 1 218.14 3836.4 -52738\r## - zipcode 12 462.64 4080.9 -51089\r## - room_type 2 1828.54 5446.8 -43264\r그 결과는 다음과 같다.\nsummary(lm4)\r## ## Call:\r## lm(formula = log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + review_scores_rating + ## bedrooms + beds + zipcode, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.51557 -0.22551 -0.00287 0.22588 2.52586 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 2.8112298 0.0525988 53.447 \u003c 2e-16 ***\r## room_typePrivate room -0.5855993 0.0055699 -105.136 \u003c 2e-16 ***\r## room_typeShared room -1.1375240 0.0161312 -70.517 \u003c 2e-16 ***\r## property_typeHouse -0.0183360 0.0059407 -3.087 0.00203 ** ## property_typeOther 0.0422432 0.0072288 5.844 5.16e-09 ***\r## accommodates 0.0668736 0.0021358 31.311 \u003c 2e-16 ***\r## bathrooms 0.1209281 0.0049524 24.418 \u003c 2e-16 ***\r## cancellation_policy.L 0.2933262 0.0452494 6.482 9.18e-11 ***\r## cancellation_policy.Q 0.1616865 0.0337823 4.786 1.71e-06 ***\r## cancellation_policy.C 0.0664165 0.0154332 4.303 1.69e-05 ***\r## host_identity_verifiedt 0.0162382 0.0055087 2.948 0.00320 ** ## host_response_rate -0.1381528 0.0227264 -6.079 1.23e-09 ***\r## instant_bookablet -0.0365163 0.0049570 -7.367 1.80e-13 ***\r## review_scores_rating 0.0188152 0.0005015 37.518 \u003c 2e-16 ***\r## bedrooms 0.1719812 0.0042620 40.352 \u003c 2e-16 ***\r## beds -0.0390361 0.0031066 -12.566 \u003c 2e-16 ***\r## zipcode11 -0.3585074 0.0072259 -49.614 \u003c 2e-16 ***\r## zipcode1m -0.3950436 0.3661121 -1.079 0.28059 ## zipcode20 -0.2976181 0.0100374 -29.651 \u003c 2e-16 ***\r## zipcode21 -0.2358253 0.0112927 -20.883 \u003c 2e-16 ***\r## zipcode22 -0.1539659 0.0548451 -2.807 0.00500 ** ## zipcode24 -0.6528374 0.3661251 -1.783 0.07458 . ## zipcode60 -0.3329465 0.0101308 -32.865 \u003c 2e-16 ***\r## zipcode90 -0.2835116 0.0071819 -39.476 \u003c 2e-16 ***\r## zipcode91 -0.5014514 0.0112977 -44.385 \u003c 2e-16 ***\r## zipcode92 -0.8951543 0.3661830 -2.445 0.01451 * ## zipcode93 -0.6850067 0.1017839 -6.730 1.73e-11 ***\r## zipcode94 -0.2315125 0.0091763 -25.229 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.366 on 27008 degrees of freedom\r## Multiple R-squared: 0.6588, Adjusted R-squared: 0.6584 ## F-statistic: 1931 on 27 and 27008 DF, p-value: \u003c 2.2e-16\rplot(lm4,which=1)\rplot(lm4,which=2)\r## Warning: not plotting observations with leverage one:\r## 1413, 8437, 20636\r정규성과 등분산성에 문제가 없다. Y 변수가 아닌 잔차를 바탕으로 trellis plot을 그려보면 큰 문제는 보이지 않는다. (결과는 생략 eval=FALSE)\nxyplot(lm4$residuals ~ room_type, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ cancellation_policy, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ property_type, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ accommodates, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ bathrooms, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ host_identity_verified, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ host_response_rate, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ instant_bookable , data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ review_scores_rating, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ bedrooms, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ beds, data=f_df,panel=mypanel)\rxyplot(lm4$residuals ~ zipcode, data=f_df,panel=mypanel)\r즉 우리는 교호작용 없이 총 12개의 변수를 이용해 회귀분석 하였다.\n\rroom_type\rproperty_type\raccommodates\rbathrooms\rcancellation_policy\rhost_identity_verified\rhost_response_rate\rinstant_bookable\rreview_scores_rating\rbedrooms\rbeds\rzipcode\r\r이제 오버피팅을 막기 위해 데이터를 train set과 test set으로 나누어 모형 만들어 평가해 보도록 한다.\nnobs=nrow(f_df)\rset.seed(1234)\ri = sample(1:nobs, round(nobs*0.6)) #60% for training data, 40% for testdata\rtrain_df = f_df[i,] test_df = f_df[-i,]\rlm5 = lm(log_price_ratio ~ room_type + property_type + accommodates + bathrooms + cancellation_policy + host_identity_verified + host_response_rate + instant_bookable + review_scores_rating + bedrooms + beds + zipcode, data = f_df)\rsummary(lm5)\r## ## Call:\r## lm(formula = log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + review_scores_rating + ## bedrooms + beds + zipcode, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.51557 -0.22551 -0.00287 0.22588 2.52586 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 2.8112298 0.0525988 53.447 \u003c 2e-16 ***\r## room_typePrivate room -0.5855993 0.0055699 -105.136 \u003c 2e-16 ***\r## room_typeShared room -1.1375240 0.0161312 -70.517 \u003c 2e-16 ***\r## property_typeHouse -0.0183360 0.0059407 -3.087 0.00203 ** ## property_typeOther 0.0422432 0.0072288 5.844 5.16e-09 ***\r## accommodates 0.0668736 0.0021358 31.311 \u003c 2e-16 ***\r## bathrooms 0.1209281 0.0049524 24.418 \u003c 2e-16 ***\r## cancellation_policy.L 0.2933262 0.0452494 6.482 9.18e-11 ***\r## cancellation_policy.Q 0.1616865 0.0337823 4.786 1.71e-06 ***\r## cancellation_policy.C 0.0664165 0.0154332 4.303 1.69e-05 ***\r## host_identity_verifiedt 0.0162382 0.0055087 2.948 0.00320 ** ## host_response_rate -0.1381528 0.0227264 -6.079 1.23e-09 ***\r## instant_bookablet -0.0365163 0.0049570 -7.367 1.80e-13 ***\r## review_scores_rating 0.0188152 0.0005015 37.518 \u003c 2e-16 ***\r## bedrooms 0.1719812 0.0042620 40.352 \u003c 2e-16 ***\r## beds -0.0390361 0.0031066 -12.566 \u003c 2e-16 ***\r## zipcode11 -0.3585074 0.0072259 -49.614 \u003c 2e-16 ***\r## zipcode1m -0.3950436 0.3661121 -1.079 0.28059 ## zipcode20 -0.2976181 0.0100374 -29.651 \u003c 2e-16 ***\r## zipcode21 -0.2358253 0.0112927 -20.883 \u003c 2e-16 ***\r## zipcode22 -0.1539659 0.0548451 -2.807 0.00500 ** ## zipcode24 -0.6528374 0.3661251 -1.783 0.07458 . ## zipcode60 -0.3329465 0.0101308 -32.865 \u003c 2e-16 ***\r## zipcode90 -0.2835116 0.0071819 -39.476 \u003c 2e-16 ***\r## zipcode91 -0.5014514 0.0112977 -44.385 \u003c 2e-16 ***\r## zipcode92 -0.8951543 0.3661830 -2.445 0.01451 * ## zipcode93 -0.6850067 0.1017839 -6.730 1.73e-11 ***\r## zipcode94 -0.2315125 0.0091763 -25.229 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.366 on 27008 degrees of freedom\r## Multiple R-squared: 0.6588, Adjusted R-squared: 0.6584 ## F-statistic: 1931 on 27 and 27008 DF, p-value: \u003c 2.2e-16\rplot(lm5,which=1)\rplot(lm5,which=2)\r## Warning: not plotting observations with leverage one:\r## 1413, 8437, 20636\rp-value도 유의미하며(일부 zipcode는 유의미 하지 않으나 대부분이 유의미하므로 그대로 사용한다. 하지만 해당 zipcode에 대해서는 해석에 유의할 필요가 있다.), Adjusted R-squared도 0.6584이다. 잔차도 문제 없으므로 test데이터와 비교를 해본다.\n그 결과 예측결정계수,평균절대오차, MAPE는 순서대로 다음과 같다.\n## predicted values\rpred = predict(lm5, newdata=test_df, type='response')\r# predictive R^2\rcor(test_df$log_price_ratio, pred)^2\r## [1] 0.6595498\r# MAE\rmean(abs(test_df$log_price_ratio - pred))\r## [1] 0.280805\r# MAPE\rmean(abs(test_df$log_price_ratio - pred)/abs(test_df$log_price_ratio))*100\r## [1] 6.538482\r\r최종 결과\r마지막으로 우리의 최종 모형을 설명하고자 한다.\nsummary(lm5)\r## ## Call:\r## lm(formula = log_price_ratio ~ room_type + property_type + accommodates + ## bathrooms + cancellation_policy + host_identity_verified + ## host_response_rate + instant_bookable + review_scores_rating + ## bedrooms + beds + zipcode, data = f_df)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.51557 -0.22551 -0.00287 0.22588 2.52586 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u003e|t|) ## (Intercept) 2.8112298 0.0525988 53.447 \u003c 2e-16 ***\r## room_typePrivate room -0.5855993 0.0055699 -105.136 \u003c 2e-16 ***\r## room_typeShared room -1.1375240 0.0161312 -70.517 \u003c 2e-16 ***\r## property_typeHouse -0.0183360 0.0059407 -3.087 0.00203 ** ## property_typeOther 0.0422432 0.0072288 5.844 5.16e-09 ***\r## accommodates 0.0668736 0.0021358 31.311 \u003c 2e-16 ***\r## bathrooms 0.1209281 0.0049524 24.418 \u003c 2e-16 ***\r## cancellation_policy.L 0.2933262 0.0452494 6.482 9.18e-11 ***\r## cancellation_policy.Q 0.1616865 0.0337823 4.786 1.71e-06 ***\r## cancellation_policy.C 0.0664165 0.0154332 4.303 1.69e-05 ***\r## host_identity_verifiedt 0.0162382 0.0055087 2.948 0.00320 ** ## host_response_rate -0.1381528 0.0227264 -6.079 1.23e-09 ***\r## instant_bookablet -0.0365163 0.0049570 -7.367 1.80e-13 ***\r## review_scores_rating 0.0188152 0.0005015 37.518 \u003c 2e-16 ***\r## bedrooms 0.1719812 0.0042620 40.352 \u003c 2e-16 ***\r## beds -0.0390361 0.0031066 -12.566 \u003c 2e-16 ***\r## zipcode11 -0.3585074 0.0072259 -49.614 \u003c 2e-16 ***\r## zipcode1m -0.3950436 0.3661121 -1.079 0.28059 ## zipcode20 -0.2976181 0.0100374 -29.651 \u003c 2e-16 ***\r## zipcode21 -0.2358253 0.0112927 -20.883 \u003c 2e-16 ***\r## zipcode22 -0.1539659 0.0548451 -2.807 0.00500 ** ## zipcode24 -0.6528374 0.3661251 -1.783 0.07458 . ## zipcode60 -0.3329465 0.0101308 -32.865 \u003c 2e-16 ***\r## zipcode90 -0.2835116 0.0071819 -39.476 \u003c 2e-16 ***\r## zipcode91 -0.5014514 0.0112977 -44.385 \u003c 2e-16 ***\r## zipcode92 -0.8951543 0.3661830 -2.445 0.01451 * ## zipcode93 -0.6850067 0.1017839 -6.730 1.73e-11 ***\r## zipcode94 -0.2315125 0.0091763 -25.229 \u003c 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.366 on 27008 degrees of freedom\r## Multiple R-squared: 0.6588, Adjusted R-squared: 0.6584 ## F-statistic: 1931 on 27 and 27008 DF, p-value: \u003c 2.2e-16\rY변수 : log_price_ratio (가격비에 log를 취한 값)\r\rX변수 : room_type + property_type + accommodates + bathrooms + cancellation_policy + host_identity_verified + host_response_rate + instant_bookable + review_scores_rating + bedrooms + beds + zipcod\r위의 Coefficients의 Estimate를 보면 그 결과를 알 수 있으나 간단히 설명하면 다음과 같다.\n\rcancellation_policy가 “super_strict_30”에서 “flexible”으로 변하면 0.2750713만큼 log_price_ratio가 증가한다.\n\rcancellation_policy가 “super_strict_30”에서 “moderate”으로 변하면 0.1480741만큼 log_price_ratio가 증가한다.\n\rcancellation_policy가 “super_strict_30”에서 “strict”으로 변하면 0.0603244만큼 log_price_ratio가 증가한다.\n\rroom_type가 Entire home/apt에서 “Private room”으로 변하면 0.5854706만큼 log_price_ratio가 감소한다.\n\rroom_type가 Entire home/apt에서 “Shared room”으로 변하면 1.1371925만큼 log_price_ratio가 감소한다.\n\rproperty_type가 “Apartment”에서 “House”으로 변하면 0.0184556만큼 log_price_ratio가 감소한다.\n\rproperty_type가 “Apartment”에서 “Other”으로 변하면 0.0422110만큼 log_price_ratio가 증가한다.\n\rhost_identity_verified가 “f”에서 “t”으로 변하면 0.0162358만큼 log_price_ratio가 증가한다.\n\rbedrooms의 개수가 1개 증가할 수록 0.1718274만큼 log_price_ratio가 증가한다.\n\rbeds의 수가 1개 증가할수록 0.0392406만큼 log_price_ratio가 감소한다.\n\rbathrooms의 개수가 1개 증가할 수록 0.1208864만큼 log_price_ratio가 증가한다.\n\raccommodate가 1 증가할 수록 0.0670576만큼 log_price_ratio가 증가한다.\n\rhost_response_rate가 1 증가할 수록 0.1385022만큼 log_price_ratio가 감소한다.\n\rinstant_bookablet가 1 증가할 수록 0.0365038만큼 log_price_ratio가 감소한다.\n\rreview_scores_rating가 1 증가할 수록 0.0188218만큼 log_price_ratio가 증가한다.\n\rzipcode의 경우 10###에서 각 해당 코드로 변했을떄 log_price_ratio가 얼마나 감소했는지를 의미한다. 다만 zipcode1m###과 zipcode24###는 설명하지 않는다.\n\r\r\r\r","description":"","tags":["R Markdown","로지스틱"],"title":"데이터마이닝 - 로지스틱 회귀분석","uri":"/posts/report/1/"}]
